// Generated by CoffeeScript 1.6.3
(function() {
  var client,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  client = angular.module('client', []);

  client.controller('MainCtrl', function($scope, $http) {
    var _this = this;
    $scope.palettes = {};
    $scope.request = {};
    $scope.user = {};
    $scope.toggle = 1;
    $scope.getAccount = function(user) {
      var _this = this;
      $scope.toggle = !$scope.toggle;
      return $http.post('/getAccount', user).success(function(resp) {
        var feature, featureName, product, productName, resource, resourceName, _ref, _results;
        $scope.palettes = resp;
        _ref = $scope.palettes;
        _results = [];
        for (productName in _ref) {
          product = _ref[productName];
          _results.push((function() {
            var _ref1, _results1;
            _ref1 = product.resources;
            _results1 = [];
            for (resourceName in _ref1) {
              resource = _ref1[resourceName];
              _results1.push((function() {
                var _ref2, _results2;
                _ref2 = resource.resourceFeatures;
                _results2 = [];
                for (featureName in _ref2) {
                  feature = _ref2[featureName];
                  _results2.push(feature.show = 0);
                }
                return _results2;
              })());
            }
            return _results1;
          })());
        }
        return _results;
      });
    };
    $scope.getAccount({
      username: 'dummy',
      apiKey: 'dummy'
    });
    $scope.inputlessFeatures = ['all'];
    $scope.resourceClick = function(productName, resourceName, feature, data) {
      var _this = this;
      if (__indexOf.call($scope.inputlessFeatures, feature) >= 0) {
        return $http.post('/' + productName + '/' + resourceName + '/' + feature, data).success(function(resp) {
          if (resp.length === 0) {
            resp = [
              {
                name: 'No results'
              }
            ];
          }
          return $scope.palettes[productName].resources[resourceName].models = resp;
        });
      } else {
        console.log('feature:', feature);
        console.log('meta', $scope.palettes[productName].resources[resourceName]);
        return $scope.palettes[productName].resources[resourceName].resourceFeatures[feature].show = !$scope.palettes[productName].resources[resourceName].resourceFeatures[feature].show;
      }
    };
    $scope.resourceSubmit = function() {
      return $http.post('/' + productName + '/' + resourceName + '/' + feature, data).success(function(resp) {
        if (resp.length === 0) {
          resp = [
            {
              name: 'No results'
            }
          ];
        }
        return $scope.palettes[productName].resources[resourceName].models = resp;
      });
    };
    return $scope.formSubmit = function(formData) {
      var fieldName, fieldValue, _ref, _results;
      formData.show = !formData.show;
      console.log('submit click');
      _ref = formData.request;
      _results = [];
      for (fieldName in _ref) {
        fieldValue = _ref[fieldName];
        _results.push(console.log('request item', fieldName, fieldValue));
      }
      return _results;
    };
  });

}).call(this);
